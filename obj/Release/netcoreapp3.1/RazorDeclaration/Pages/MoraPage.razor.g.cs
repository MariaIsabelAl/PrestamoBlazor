#pragma checksum "C:\Aplicada2\PrestamoBlazor\Pages\MoraPage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8e57db7ccac5dd025fb94b7537e1051a546b8c24"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace PrestamoBlazor.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using PrestamoBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using PrestamoBlazor.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Aplicada2\PrestamoBlazor\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Aplicada2\PrestamoBlazor\Pages\MoraPage.razor"
using PrestamoBlazor.BLL;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Aplicada2\PrestamoBlazor\Pages\MoraPage.razor"
using PrestamoBlazor.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/moras")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/moras/{MoraId:int}")]
    public partial class MoraPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 121 "C:\Aplicada2\PrestamoBlazor\Pages\MoraPage.razor"
       

    [Parameter]
    public int MoraId { get; set; }

    public int prestamoSeleccionado { get; set; }
    public decimal valorColocado { get; set; }
    public string nombrePersona { get; set; }

    Moras mora = new Moras();
    List<Prestamos> listaPrestamo = new List<Prestamos>();

    protected override void OnInitialized()
    {
        Nuevo();
        if (MoraId > 0)
        {
            var auxMora = MoraBLL.Buscar(MoraId);
            if (auxMora != null)
                this.mora = auxMora;
            else
                toast.ShowWarning("No encontrado.");
        }

        listaPrestamo = PrestamoBLL.GetList(p => true);
    }

    private void Buscar()
    {
        var encontrado = MoraBLL.Buscar(mora.MoraId);
        if (encontrado != null)
        {
            this.mora = encontrado;
        }
        else
            toast.ShowWarning("No encontrado");

    }


    private void Nuevo()
    {
        this.mora = new Moras();
        prestamoSeleccionado = 0;
        valorColocado = 0;
        nombrePersona = string.Empty;
        
    }

    private void MostrarNombrePersona()
    {
        string auxNombre = string.Empty;

        var auxPrestamo = PrestamoBLL.Buscar(prestamoSeleccionado);
        if (auxPrestamo != null)
        {
            auxNombre = PersonasBLL.Buscar(auxPrestamo.PersonaId).Nombre;
            nombrePersona = auxNombre;
        }
    }

    private void AgregarMora()
    {
        if(prestamoSeleccionado == 0)
        {
            toast.ShowWarning("Tiene que seleccionar un Prestamo Id.");
            return;
        }

        if (valorColocado <= 0)
        {
            toast.ShowWarning("El valor debe ser mayor a 0.");
            return;
        }
        else
        {
            this.mora.MoraDetalles.Add(new MoraDetalles
            {
                MoraDetalleId = 0,
                MoraId = mora.MoraId,
                PrestamoId = prestamoSeleccionado,
                Valor = valorColocado
            });
            prestamoSeleccionado = 0;
            valorColocado = 0;
            nombrePersona = string.Empty;
        }
        CalcularTotal();

    }

    private void CalcularTotal()
    {
        decimal total = 0;
        foreach (var item in mora.MoraDetalles)
        {
            total += item.Valor;
        }
        mora.Total = total;
    }

    private void EliminarMoraDetalle(MoraDetalles detalles)
    {
        try
        {
            mora.MoraDetalles.Remove(detalles);
            CalcularTotal();
        }
        catch (Exception)
        {

            throw;
        }
    }


    private void Guardar()
    {
        bool paso;
        if (mora.MoraDetalles.Count == 0)
        {
            toast.ShowWarning("Tienes que agregar al menos un elemento a la lista", "Lista VacÃ­a!");
            return;
        }
        else
        {
            paso = MoraBLL.Guardar(mora);

            if (paso)
            {
                Nuevo();
                toast.ShowSuccess("Guardado correctamente");
            }
            else
            {
                toast.ShowError("No fue posible guardar");
            }
        }

    }

    private void Eliminar()
    {
        bool elimino;

        elimino = MoraBLL.Eliminar(mora.MoraId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toast { get; set; }
    }
}
#pragma warning restore 1591
